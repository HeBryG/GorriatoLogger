# .github/workflows/release.yml

name: Release Electron App

on:
  push:
    tags:
      - 'v*.*' 

jobs:
  build-and-release:
    runs-on: ubuntu-latest # Use Ubuntu for building both AppImage and Windows .exe (via cross-compilation)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Ensure this matches your project's Node.js version
          cache: 'npm' # Cache npm dependencies for faster builds

      - name: Install dependencies
        run: npm install
      - name: Install Wine and other build tools for cross-compilation
        run: |
          # Add i386 architecture for Wine's 32-bit components
          sudo dpkg --add-architecture i386
          # Update package lists
          sudo apt-get update
          # Install Wine (64-bit and 32-bit support) and other common build tools
          # Removed libicns-utils and icnsutils as they are for macOS icon handling
          sudo apt-get install -y --no-install-recommends \
            wine \
            wine64 \
            graphicsmagick \
            libpng-dev \
            libjpeg-dev \
            libtiff-dev \
            libgif-dev \
            libxkbfile-dev \
            fakeroot \
            rpm \
            dpkg

      - name: Build and Release Electron App for Windows (x64) and Linux (AppImage)
        env:
          # GitHub Token for uploading assets to releases
          # This token is automatically provided by GitHub Actions
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WIN_BUILD_FOR_BROWSER: true
          # Optional: If you have a private code signing certificate or other secrets for electron-builder,
          # define them here as repository secrets.
          # CSC_LINK: ${{ secrets.CSC_LINK }}
          # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
        run: |
          # Build for Windows (x64)
          npm run build:win64 -- --publish onTag
          # Build for Linux (AppImage)
          npm run build:linux -- --publish onTag