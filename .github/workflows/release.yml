# .github/workflows/release.yml

name: Release Electron App

on:
  push:
    tags:
      - 'v*.*' 

jobs:
  build-and-release:
    runs-on: ubuntu-latest # Use Ubuntu for building both AppImage and Windows .exe (via cross-compilation)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Ensure this matches your project's Node.js version
          cache: 'npm' # Cache npm dependencies for faster builds

      - name: Clean install dependencies
        # Use npm ci for a clean install, which is often more reliable in CI environments
        run: npm ci

      - name: Run postinstall script
        run: npm run postinstall

      - name: Install Wine and Xvfb for Windows cross-compilation
        run: |
          # Remove any existing Wine configuration to ensure a clean start
          rm -rf ~/.wine || true # '|| true' prevents failure if .wine doesn't exist
          
          # Add i386 architecture for Wine's 32-bit components
          sudo dpkg --add-architecture i386
          
          # Download and add the WineHQ key
          sudo mkdir -pm755 /etc/apt/keyrings
          sudo wget -O /etc/apt/keyrings/winehq-archive.key https://dl.winehq.org/wine-builds/winehq.key
          
          # Add the WineHQ repository for Ubuntu (using lsb_release to get the correct codename)
          # Using 'stable' branch for more reliability
          sudo wget -NP /etc/apt/sources.d/winehq-$(lsb_release -cs).sources https://dl.winehq.org/wine-builds/ubuntu/dists/$(lsb_release -cs)/winehq-$(lsb_release -cs).sources
          
          # Update package lists
          sudo apt-get update
          
          # Install Wine-stable (which should pull in wine32 and wine64) and Xvfb
          # Explicitly install wine32 and common 32-bit libs like libstdc++6:i386
          sudo apt-get install -y --no-install-recommends \
            wine-stable \
            wine32 \
            wine64 \
            xvfb \
            graphicsmagick \
            libpng-dev \
            libjpeg-dev \
            libtiff-dev \
            libgif-dev \
            libxkbfile-dev \
            fakeroot \
            rpm \
            dpkg \
            libstdc++6:i386 # Crucial 32-bit runtime dependency for many Wine apps
          
          # Initialize Wine prefix and ensure it's a 64-bit prefix
          # This creates the .wine directory and sets up the basic Windows environment
          export WINEARCH=win64
          export WINEPREFIX=/home/runner/.wine # Explicitly set WINEPREFIX for clarity
          wineboot -u # Update/initialize Wine prefix
          # A short sleep to ensure Wine is fully initialized
          sleep 5

      - name: Build and Release Electron App for Windows (x64) and Linux (AppImage)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Tell electron-builder to skip the rcedit step, which requires a display server (though Xvfb helps too)
          WIN_BUILD_FOR_BROWSER: true
          # Set DISPLAY to use Xvfb, providing a virtual screen for Wine
          DISPLAY: :99.0
          # CSC_LINK: ${{ secrets.CSC_LINK }} # Optional: For code signing
          # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }} # Optional: For code signing
        run: |
          # Start Xvfb (X Virtual Framebuffer) in the background on display :99
          Xvfb :99 -ac -screen 0 1280x1024x24 &
          # Give Xvfb a moment to start up
          sleep 5 # Increased sleep time to ensure Xvfb is ready
          
          # Build for Windows (x64) using npm run directly
          npm run build:win64 -- --publish onTag
          # Build for Linux (AppImage) using npm run directly
          npm run build:linux -- --publish onTag